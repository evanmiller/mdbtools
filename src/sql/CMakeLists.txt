SET(LIBMDBSQL_SRCS
  mdbsql.c
 )
 
SET(LIBMDBSQL_HDRS
  ../../include/mdbtools.h
  ../../include/mdbsql.h
)

IF(FAKE_GLIB)
  SET(LIBMDBSQL_SRCS
    ${LIBMDBSQL_SRCS}
    ../libmdb/fakeglib.c
    )
ELSE(FAKE_GLIB)
  INCLUDE_DIRECTORIES(SYSTEM ${GLIB_INCLUDE_DIRS})
ENDIF(FAKE_GLIB)

INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_BINARY_DIR}
  ../../include
)

BISON_TARGET(mdbsql_parser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.c
             DEFINES_FILE ${CMAKE_CURRENT_BINARY_DIR}/parser.h)
FLEX_TARGET(mdbsql_scanner lexer.l  ${CMAKE_CURRENT_BINARY_DIR}/lexer.c)
ADD_FLEX_BISON_DEPENDENCY(mdbsql_scanner mdbsql_parser)

ADD_LIBRARY(libmdbsql ${LIBRARY_TYPE} ${LIBMDBSQL_SRCS} ${LIBMDBSQL_HDRS}  ${BISON_mdbsql_parser_OUTPUTS}
    ${FLEX_mdbsql_scanner_OUTPUTS})

TARGET_LINK_LIBRARIES(libmdbsql libmdb)

IF(NOT FAKE_GLIB)
  TARGET_LINK_LIBRARIES(libmdbsql ${GLIB_LDFLAGS})
ENDIF(NOT FAKE_GLIB)

SET_TARGET_PROPERTIES(libmdbsql PROPERTIES
  VERSION ${COMPLETE_VERSION}
  SOVERSION ${COMPLETE_VERSION}
)

# install

INSTALL(FILES ${LIBMDBSQL_HDRS} DESTINATION ${MDBTOOLS_INCLUDE_DIR})

INSTALL(TARGETS libmdbsql
  RUNTIME DESTINATION ${MDBTOOLS_BIN_DIR}
  LIBRARY DESTINATION ${MDBTOOLS_LIB_SUBDIR}
  ARCHIVE DESTINATION ${MDBTOOLS_LIB_SUBDIR}
  PUBLIC_HEADER DESTINATION ${MDBTOOLS_INCLUDE_DIR})
